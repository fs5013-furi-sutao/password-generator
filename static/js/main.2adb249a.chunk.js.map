{"version":3,"sources":["App.js","components/Characters.js","reportWebVitals.js","index.js"],"names":["App","useState","password","setPassword","strength","setStrength","includeUp","setIncludeUp","includeLow","setIncludeLow","includeNum","setIncludeNum","includeSym","setIncludeSym","alert","setAlert","isAlert","setIsAlert","createPassword","characterList","CharacterListLength","length","i","characterIndex","Math","floor","random","charAt","className","onClick","e","navigator","clipboard","writeText","setTimeout","htmlFor","defaultValue","onChange","target","value","type","id","name","max","min","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2adb249a.chunk.js","sourcesContent":["import './css/App.css';\r\nimport React, { useState } from 'react';\r\nimport { UppercaseLetters, LowercaseLetters, Symbols, Numbers } from './components/Characters'\r\n\r\nfunction App() {\r\n\r\n  const [password, setPassword] = useState('');\r\n  const [strength, setStrength] = useState(20);\r\n  const [includeUp, setIncludeUp] = useState(false);\r\n  const [includeLow, setIncludeLow] = useState(false);\r\n  const [includeNum, setIncludeNum] = useState(false);\r\n  const [includeSym, setIncludeSym] = useState(false);\r\n  const [alert, setAlert] = useState('');\r\n  const [isAlert, setIsAlert] = useState(false);\r\n  const handlePassword = (e) => {\r\n    let characterList = '';\r\n\r\n    if (includeUp) {\r\n      characterList += UppercaseLetters;\r\n    }\r\n\r\n    if (includeLow) {\r\n      characterList += LowercaseLetters;\r\n    }\r\n\r\n    if (includeNum) {\r\n      characterList += Numbers;\r\n    }\r\n\r\n    if (includeSym) {\r\n      characterList += Symbols;\r\n    }\r\n\r\n    setPassword(createPassword(characterList));\r\n\r\n    if (characterList === \"\") {\r\n      setIsAlert(true);\r\n      setAlert('どの文字を含めるか、指定してください');\r\n      setTimeout(() => { setAlert(''); }, 1000);\r\n    } else {\r\n      setIsAlert(false);\r\n      setAlert('パスワードを生成しました');\r\n      setTimeout(() => { setAlert(''); }, 1000);\r\n    }\r\n  }\r\n\r\n  const createPassword = (characterList) => {\r\n    let password = '';\r\n    const CharacterListLength = characterList.length;\r\n\r\n    for (let i = 0; i < strength; i++) {\r\n      const characterIndex = Math.floor(Math.random() * CharacterListLength);\r\n      password += characterList.charAt(characterIndex);\r\n    }\r\n\r\n    return password;\r\n  }\r\n\r\n  const handleCopy = (e) => {\r\n    navigator.clipboard.writeText(password);\r\n    if (password.length > 0) {\r\n      setIsAlert(false);\r\n      setAlert('コピーしました！');\r\n      setTimeout(() => { setAlert(''); }, 1000);\r\n\r\n    } else {\r\n      setIsAlert(true);\r\n      setAlert('パスワードを生成してください');\r\n      setTimeout(() => { setAlert(''); }, 1000);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"generator\">\r\n          <h1 className=\"generator_header\">\r\n            <i className=\"fas fa-key\"></i> パスワード生成ツール\r\n          </h1>\r\n          <div className=\"generator_password\">\r\n            <h3>{password}</h3>\r\n            <button onClick={handleCopy} className=\"copy_button\">\r\n              <i className=\"far fa-clipboard\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"message_area\">\r\n            {isAlert && <p className='alert_Message'>{alert}</p>}\r\n            {!isAlert && <p className='success_Message'>{alert}</p>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password-strength\">パスワードの長さ</label>\r\n            <input\r\n              defaultValue={strength}\r\n              onChange={(e) => setStrength(e.target.value)}\r\n              type=\"number\"\r\n              id='password-strength'\r\n              name=\"password-strength\"\r\n              max=\"20\" min=\"8\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"uppercase-letters\">大文字を含める</label>\r\n            <input\r\n              onChange={(e) => setIncludeUp(e.target.checked)}\r\n              checked={includeUp}\r\n              type=\"checkbox\"\r\n              id='uppercase-letters'\r\n              className=\"ItemBox-CheckBox-Input\"\r\n              name=\"uppercase-letters\"\r\n            />\r\n            <label htmlFor=\"uppercase-letters\" className=\"ItemBox-CheckBox-Label\"></label>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lowercase-letters\">小文字を含める</label>\r\n            <input\r\n              onChange={(e) => setIncludeLow(e.target.checked)}\r\n              checked={includeLow}\r\n              type=\"checkbox\"\r\n              id='lowercase-letters'\r\n              className=\"ItemBox-CheckBox-Input\"\r\n              name=\"lowercase-letters\"\r\n            />\r\n            <label htmlFor=\"lowercase-letters\" className=\"ItemBox-CheckBox-Label\"></label>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"include-symbols\">記号を含める</label>\r\n            <input\r\n              onChange={(e) => setIncludeSym(e.target.checked)}\r\n              checked={includeSym}\r\n              type=\"checkbox\"\r\n              id='include-symbols'\r\n              className=\"ItemBox-CheckBox-Input\"\r\n              name=\"include-symbols\"\r\n            />\r\n            <label htmlFor=\"include-symbols\" className=\"ItemBox-CheckBox-Label\"></label>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"include-numbers\">数字を含める</label>\r\n            <input\r\n              onChange={(e) => setIncludeNum(e.target.checked)}\r\n              checked={includeNum}\r\n              type=\"checkbox\"\r\n              id='include-number'\r\n              className=\"ItemBox-CheckBox-Input\"\r\n              name=\"include-number\"\r\n            />\r\n            <label htmlFor=\"include-number\" className=\"ItemBox-CheckBox-Label\"></label>\r\n          </div>\r\n          <div className=\"generateBtn_Div\">\r\n            <button onClick={handlePassword} className=\"generator_btn\">\r\n              <i className=\"fa fa-cogs\"></i>\r\n              &nbsp;&nbsp;パスワードを生成する\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;","export const UppercaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport const LowercaseLetters = 'abcdefghijklmnopqrstuvwxyz';\r\nexport const Symbols = ',<.>/?\"\";:]}[{=+-_^%&*()';\r\nexport const Numbers = '0123456789';","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async'\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport '@fortawesome/fontawesome-free/js/fontawesome';\r\nimport '@fortawesome/fontawesome-free/js/solid';\r\nimport '@fortawesome/fontawesome-free/js/regular';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HelmetProvider>\r\n      <Helmet>\r\n        <title>パスワード生成ツール</title>\r\n      </Helmet>\r\n      <App />\r\n    </HelmetProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}