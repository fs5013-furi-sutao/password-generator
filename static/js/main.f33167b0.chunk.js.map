{"version":3,"sources":["App.js","components/Characters.js","reportWebVitals.js","index.js"],"names":["App","useState","password","setPassword","strength","setStrength","includeUp","setIncludeUp","includeLow","setIncludeLow","includeNum","setIncludeNum","includeSym","setIncludeSym","alert","setAlert","createPassword","characterList","CharacterListLength","length","i","characterIndex","Math","floor","random","charAt","className","onClick","e","navigator","clipboard","writeText","setTimeout","htmlFor","defaultValue","onChange","target","value","type","id","name","max","min","checked","for","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f33167b0.chunk.js","sourcesContent":["import './css/App.css';\nimport React, { useState } from 'react';\nimport { UppercaseLetters, LowercaseLetters, Symbols, Numbers } from './components/Characters'\n\nfunction App() {\n\n  const [password, setPassword] = useState('');\n  const [strength, setStrength] = useState(20);\n  const [includeUp, setIncludeUp] = useState(false);\n  const [includeLow, setIncludeLow] = useState(false);\n  const [includeNum, setIncludeNum] = useState(false);\n  const [includeSym, setIncludeSym] = useState(false);\n  const [alert, setAlert] = useState('');\n  const handlePassword = (e) => {\n    let characterList = '';\n\n    if (includeUp) {\n      characterList += UppercaseLetters;\n    }\n\n    if (includeLow) {\n      characterList += LowercaseLetters;\n    }\n\n    if (includeNum) {\n      characterList += Numbers;\n    }\n\n    if (includeSym) {\n      characterList += Symbols;\n    }\n\n    setPassword(createPassword(characterList));\n  }\n\n  const createPassword = (characterList) => {\n    let password = '';\n    const CharacterListLength = characterList.length;\n\n    for (let i = 0; i < strength; i++) {\n      const characterIndex = Math.floor(Math.random() * CharacterListLength);\n      password += characterList.charAt(characterIndex);\n    }\n\n    return password;\n  }\n\n  const handleCopy = (e) => {\n    navigator.clipboard.writeText(password);\n    if (password.length > 0) {\n      setAlert('パスワードをコピーしました');\n      setTimeout(() => { setAlert(''); }, 1000);\n    }\n    else {\n      setAlert('パスワードを生成してください');\n      setTimeout(() => { setAlert(''); }, 1000);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"generator\">\n          <h1 className=\"generator_header\">\n            パスワード生成ツール\n          </h1>\n          <div className=\"generator_password\">\n            <h3>{password}</h3>\n            <button onClick={handleCopy} className=\"copy_button\">\n              <i className=\"far fa-clipboard\"></i>\n            </button>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password-strength\">パスワードの長さ</label>\n            <input\n              defaultValue={strength}\n              onChange={(e) => setStrength(e.target.value)}\n              type=\"number\"\n              id='password-strength'\n              name=\"password-strength\"\n              max=\"20\" min=\"8\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"uppercase-letters\">大文字を含める</label>\n            <input\n              onChange={(e) => setIncludeUp(e.target.checked)}\n              checked={includeUp}\n              type=\"checkbox\"\n              id='uppercase-letters'\n              className=\"ItemBox-CheckBox-Input\"\n              name=\"uppercase-letters\"\n            />\n            <label for=\"uppercase-letters\" className=\"ItemBox-CheckBox-Label\"></label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"lowercase-letters\">小文字を含める</label>\n            <input\n              onChange={(e) => setIncludeLow(e.target.checked)}\n              checked={includeLow}\n              type=\"checkbox\"\n              id='lowercase-letters'\n              className=\"ItemBox-CheckBox-Input\"\n              name=\"lowercase-letters\"\n            />\n            <label for=\"lowercase-letters\" className=\"ItemBox-CheckBox-Label\"></label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"include-symbols\">記号を含める</label>\n            <input\n              onChange={(e) => setIncludeSym(e.target.checked)}\n              checked={includeSym}\n              type=\"checkbox\"\n              id='include-symbols'\n              className=\"ItemBox-CheckBox-Input\"\n              name=\"include-symbols\"\n            />\n            <label for=\"include-symbols\" className=\"ItemBox-CheckBox-Label\"></label>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"include-numbers\">数字を含める</label>\n            <input\n              onChange={(e) => setIncludeNum(e.target.checked)}\n              checked={includeNum}\n              type=\"checkbox\"\n              id='include-number'\n              className=\"ItemBox-CheckBox-Input\"\n              name=\"include-number\"\n            />\n            <label for=\"include-number\" className=\"ItemBox-CheckBox-Label\"></label>\n          </div>\n          <div className=\"generateBtn_Div\">\n            <button onClick={handlePassword} className=\"generator_btn\">\n              <i className=\"fa fa-cogs\"></i>\n              &nbsp;&nbsp;パスワードを生成する\n            </button>\n          </div>\n          <p className='alert_Message'>{alert}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","export const UppercaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport const LowercaseLetters = 'abcdefghijklmnopqrstuvwxyz';\r\nexport const Symbols = ',<.>/?\"\";:]}[{=+-_^%&*()';\r\nexport const Numbers = '0123456789';","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport '@fortawesome/fontawesome-free/js/fontawesome';\nimport '@fortawesome/fontawesome-free/js/solid';\nimport '@fortawesome/fontawesome-free/js/regular';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}